version: '3.4'

services:
  basketdb:
    image: mongo:latest
    container_name: basketdb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: test
    volumes:
      - 'db_data:/data/db'
      - 'db_config:/data/configdb'
    networks:
      - db-net
    ports:
      - 27017:27017
  basketservice:
    image: ${DOCKER_REGISTRY-}basketservice
    build:
      context: .
      dockerfile: BasketService/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:49155
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString=mongodb://test:test@basketdb:27017
      - DatabaseName=BasketDb
      - ElasticHost=http://host.docker.internal
      - ElasticPort=9200
    ports:
      - "49155:443"
    depends_on:
      - basketdb
      - elasticsearch
    networks:
      - db-net
      - backend-net
  elasticsearch:
    container_name: els
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    restart: always
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.6
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200

networks:
  db-net:
  backend-net:

volumes:
  db_data:
    driver: local
  db_config:
    driver: local
  elasticsearch-data: